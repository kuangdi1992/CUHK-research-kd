需要解决的问题：
1.频繁访问修改模型参数时所需消耗的巨大带宽（现在主要想解决的是这个问题）
2.如何提高并行度
3.减少同步等待造成的延迟
4.容错

参数服务器是个编程框架，用于方便分布式并行程序的编写，其中重点是对大规模参数的分布式存储和协同的支持。
训练大型的机器学习模型，有两个特点：
　　①　参数很大，超过单个机器的容纳能力
　　②　训练数据巨大，需要分布式并行提速（大数据）

架构：集群中的节点可以分为计算节点和参数服务节点。计算节点负责对分配到自己本地的训练数据计算学习，并更新对应的参数。参数服务节点采用分布式存储的方式，各自存储全局参数的一部分，并作为服务方接受计算节点的参数查询和更新请求。

冗余和恢复：每个参数在参数服务器的集群中都在多个不同节点上备份，这样当出现节点失效时，冗余的参数依旧能够保证服务的有效性。当有新的节点插入时，把原先失效节点的参数从冗余参数那边复制过来，失效节点的复制就加入队伍了。

李沐参数服务器：


详细流程：
1.分发训练数据：节点1……N
2.节点i的学习过程：
　　　遍历本地的训练数据，统计所有需要的参数(key)
　　　向分布式的参数服务器查询需要的参数（注意，本地数据对应到的参数只是全局参数的一小部分）
　　　得到查询到的参数值，用于模型的本地训练
　　　一轮训练完毕，得到所有对应参数的更新，将更新上传给参数服务器
3.参数服务器的更新过程：
　　　参数服务器得到计算节点传过来的局部更新，汇总后更新本地数据
　　　

参数服务器的训练部分是并行的，参数服务器的存在，每个计算节点在拿到新的batch数据之后，都要从参数服务器上取下最新的参数，然后计算梯度，再将梯度更新回参数服务器。





